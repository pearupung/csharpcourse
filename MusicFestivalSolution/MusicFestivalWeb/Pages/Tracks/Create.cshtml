@page
@model MusicFestivalWeb.Pages.Tracks.CreateModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Track</h4>
<hr/>
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <input hidden asp-for="SetId" value="@Model.SetId"/>
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Track.TrackName" class="control-label"></label>
                <input asp-for="Track.TrackName" class="form-control"/>
                <span asp-validation-for="Track.TrackName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Track.LengthInSeconds" class="control-label"></label>
                <input asp-for="Track.LengthInSeconds" class="form-control"/>
                <span asp-validation-for="Track.LengthInSeconds" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="SetTrack.ActualPlayTimeInSeconds" class="control-label"></label>
                <input asp-for="SetTrack.ActualPlayTimeInSeconds" class="form-control"/>
                <span asp-validation-for="SetTrack.ActualPlayTimeInSeconds" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary"/>
            </div>
        </form>
    </div>
</div>

<div>
    @if (Model.SetId.HasValue)
    {
        <a asp-page="/EventSets/Details" asp-route-id="@Model.SetId">Back to event set</a>
    }
    <a asp-page="Index">Back to tracks</a>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}