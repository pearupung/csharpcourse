@page
@model MusicFestivalWeb.Pages.EventSets.CreateModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>EventSet</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="All" class="text-danger"></div>
            <input hidden asp-for="EventId" value="@Model.EventId"/>
            <input hidden asp-for="FestivalId" value="@Model.FestivalId"/>
            <div class="form-group">
                <label asp-for="EventSet.SetName" class="control-label"></label>
                <input asp-for="EventSet.SetName" class="form-control" />
                <span asp-validation-for="EventSet.SetName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="EventSet.PersonId" class="control-label"></label>
                <select asp-for="EventSet.PersonId" class ="form-control" asp-items="@Model.PersonSelectList"></select>
            </div>
            @if (!Model.EventId.HasValue)
            {
                <div class="form-group">
                    <label asp-for="EventSet.EventId" class="control-label"></label>
                    <select asp-for="EventSet.EventId" class ="form-control" asp-items="ViewBag.EventId"></select>
                </div>
            }
           
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>



<div>
    @if (Model.EventId.HasValue)
    {
        <a asp-page="/OrganisedEvents/Details"
           asp-route-id="@Model.EventId"
           asp-route-festivalid="@Model.FestivalId">Back to event</a>
    }
   
    <a asp-page="/EventSets/Index">Back to sets</a>

</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
